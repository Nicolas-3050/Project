{"ast":null,"code":"export let ActuatorType;\n\n(function (ActuatorType) {\n  ActuatorType[\"BLINDS\"] = \"BLINDS\";\n  ActuatorType[\"LIGHT\"] = \"LIGHT\";\n})(ActuatorType || (ActuatorType = {}));","map":{"version":3,"sources":["C:/Users/seill/OneDrive/Documents/web_services/sumatohomu/src/interfaces/Actuator.ts"],"names":["ActuatorType"],"mappings":"AAAA,WAAYA,YAAZ;;WAAYA,Y;AAAAA,EAAAA,Y;AAAAA,EAAAA,Y;GAAAA,Y,KAAAA,Y","sourcesContent":["export enum ActuatorType {\r\n  BLINDS = \"BLINDS\",\r\n  LIGHT = \"LIGHT\",\r\n}\r\n\r\nexport default interface Actuator {\r\n  id: string | number;\r\n  type: ActuatorType;\r\n  designation: string;\r\n  state: boolean;\r\n}\r\nexport type ActuatorPost = Omit<Actuator, \"id\">;\r\nexport type ActuatorUpdate = Partial<ActuatorPost>;\r\n"]},"metadata":{},"sourceType":"module"}