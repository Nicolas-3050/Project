{"ast":null,"code":"export let SensorType;\n\n(function (SensorType) {\n  SensorType[\"TEMPERATURE\"] = \"TEMPERATURE\";\n  SensorType[\"HUMIDITY\"] = \"HUMIDITY\";\n  SensorType[\"BARO\"] = \"BARO\";\n  SensorType[\"PROXIMITY\"] = \"PROXIMITY\";\n})(SensorType || (SensorType = {}));","map":{"version":3,"sources":["C:/Users/seill/OneDrive/Documents/web_services/sumatohomu/src/interfaces/Sensor.ts"],"names":["SensorType"],"mappings":"AAAA,WAAYA,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U","sourcesContent":["export enum SensorType {\r\n  TEMPERATURE = \"TEMPERATURE\",\r\n  HUMIDITY = \"HUMIDITY\",\r\n  BARO = \"BARO\",\r\n  PROXIMITY = \"PROXIMITY\",\r\n}\r\n\r\nexport interface Sensor {\r\n  id?: number | string;\r\n  type: SensorType;\r\n  designation: string;\r\n  rawValue: number | boolean;\r\n}\r\n\r\nexport type SensorGet = Sensor & { value: string };\r\nexport type SensorPost = Omit<Sensor, \"id\">;\r\nexport type SensorUpdate = Partial<SensorPost>;\r\n"]},"metadata":{},"sourceType":"module"}