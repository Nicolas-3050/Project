{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seill\\\\OneDrive\\\\Documents\\\\web_services\\\\sumatohomu\\\\src\\\\components\\\\utils\\\\SensorListItem.tsx\";\nimport { AvTimer, Delete, Help, Sensors, Thermostat, WaterDamage } from \"@mui/icons-material\";\nimport { IconButton, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\nimport { SensorType } from \"../../interfaces/Sensor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getTypeIcon = type => {\n  switch (type) {\n    case SensorType.TEMPERATURE:\n      return /*#__PURE__*/_jsxDEV(Thermostat, {\n        sx: {\n          fontSize: 30\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n\n    case SensorType.HUMIDITY:\n      return /*#__PURE__*/_jsxDEV(WaterDamage, {\n        sx: {\n          fontSize: 30\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n\n    case SensorType.BARO:\n      return /*#__PURE__*/_jsxDEV(AvTimer, {\n        sx: {\n          fontSize: 30\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this);\n\n    case SensorType.PROXIMITY:\n      return /*#__PURE__*/_jsxDEV(Sensors, {\n        sx: {\n          fontSize: 30\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n\n    default:\n      return /*#__PURE__*/_jsxDEV(Help, {\n        sx: {\n          fontSize: 30\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n  }\n};\n\nconst SensorListItem = props => {\n  const {\n    sensor,\n    onDelete\n  } = props;\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"error\",\n      onClick: () => {\n        onDelete(sensor);\n      },\n      children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemIcon, {\n      children: getTypeIcon(sensor.type)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      primary: sensor.designation,\n      secondary: sensor.value || sensor.rawValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SensorListItem;\nexport default SensorListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SensorListItem\");","map":{"version":3,"sources":["C:/Users/seill/OneDrive/Documents/web_services/sumatohomu/src/components/utils/SensorListItem.tsx"],"names":["AvTimer","Delete","Help","Sensors","Thermostat","WaterDamage","IconButton","ListItem","ListItemIcon","ListItemText","SensorType","getTypeIcon","type","TEMPERATURE","fontSize","HUMIDITY","BARO","PROXIMITY","SensorListItem","props","sensor","onDelete","designation","value","rawValue"],"mappings":";AAAA,SACEA,OADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,OAJF,EAKEC,UALF,EAMEC,WANF,QAOO,qBAPP;AAQA,SACEC,UADF,EAEEC,QAFF,EAGEC,YAHF,EAIEC,YAJF,QAKO,eALP;AAOA,SAAoBC,UAApB,QAAsC,yBAAtC;;;AAMA,MAAMC,WAAW,GAAIC,IAAD,IAAsB;AACxC,UAAQA,IAAR;AACE,SAAKF,UAAU,CAACG,WAAhB;AACE,0BAAO,QAAC,UAAD;AAAY,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAKJ,UAAU,CAACK,QAAhB;AACE,0BAAO,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAAED,UAAAA,QAAQ,EAAE;AAAZ;AAAjB;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAKJ,UAAU,CAACM,IAAhB;AACE,0BAAO,QAAC,OAAD;AAAS,QAAA,EAAE,EAAE;AAAEF,UAAAA,QAAQ,EAAE;AAAZ;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF,SAAKJ,UAAU,CAACO,SAAhB;AACE,0BAAO,QAAC,OAAD;AAAS,QAAA,EAAE,EAAE;AAAEH,UAAAA,QAAQ,EAAE;AAAZ;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;;AACF;AACE,0BAAO,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ;AAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AAVJ;AAYD,CAbD;;AAeA,MAAMI,cAAsD,GAC1DC,KAD6D,IAE1D;AACH,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAuBF,KAA7B;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,OAAO,EAAE,MAAM;AACbE,QAAAA,QAAQ,CAACD,MAAD,CAAR;AACD,OAJH;AAAA,6BAME,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,YAAD;AAAA,gBAAeT,WAAW,CAACS,MAAM,CAACR,IAAR;AAA1B;AAAA;AAAA;AAAA;AAAA,YATF,eAUE,QAAC,YAAD;AACE,MAAA,OAAO,EAAEQ,MAAM,CAACE,WADlB;AAEE,MAAA,SAAS,EAAEF,MAAM,CAACG,KAAP,IAAgBH,MAAM,CAACI;AAFpC;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAtBD;;KAAMN,c;AAwBN,eAAeA,cAAf","sourcesContent":["import {\r\n  AvTimer,\r\n  Delete,\r\n  Help,\r\n  Sensors,\r\n  Thermostat,\r\n  WaterDamage,\r\n} from \"@mui/icons-material\";\r\nimport {\r\n  IconButton,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@mui/material\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { SensorGet, SensorType } from \"../../interfaces/Sensor\";\r\ninterface SensorListItemProps {\r\n  sensor: SensorGet;\r\n  onDelete: (sensor: SensorGet) => void;\r\n}\r\n\r\nconst getTypeIcon = (type: SensorType) => {\r\n  switch (type) {\r\n    case SensorType.TEMPERATURE:\r\n      return <Thermostat sx={{ fontSize: 30 }} />;\r\n    case SensorType.HUMIDITY:\r\n      return <WaterDamage sx={{ fontSize: 30 }} />;\r\n    case SensorType.BARO:\r\n      return <AvTimer sx={{ fontSize: 30 }} />;\r\n    case SensorType.PROXIMITY:\r\n      return <Sensors sx={{ fontSize: 30 }} />;\r\n    default:\r\n      return <Help sx={{ fontSize: 30 }} />;\r\n  }\r\n};\r\n\r\nconst SensorListItem: FunctionComponent<SensorListItemProps> = (\r\n  props: SensorListItemProps\r\n) => {\r\n  const { sensor, onDelete } = props;\r\n\r\n  return (\r\n    <ListItem>\r\n      <IconButton\r\n        color=\"error\"\r\n        onClick={() => {\r\n          onDelete(sensor);\r\n        }}\r\n      >\r\n        <Delete />\r\n      </IconButton>\r\n      <ListItemIcon>{getTypeIcon(sensor.type)}</ListItemIcon>\r\n      <ListItemText\r\n        primary={sensor.designation}\r\n        secondary={sensor.value || sensor.rawValue}\r\n      />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default SensorListItem;\r\n"]},"metadata":{},"sourceType":"module"}