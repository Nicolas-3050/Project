{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seill\\\\OneDrive\\\\Documents\\\\web_services\\\\sumatohomu\\\\src\\\\components\\\\Drawer.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport Drawer from \"@mui/material/Drawer\";\nimport { List, ListItem, ListItemIcon, ListItemButton, ListItemText, Box } from \"@mui/material\";\nimport { Sensors, Dashboard, Person, Lightbulb, Logout } from \"@mui/icons-material\";\nimport { useAuth } from \"./utils/AuthProvider\";\nimport { useTheme } from \"../themes/ThemeProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst drawerWidth = 200;\nconst linkList = [{\n  path: \"/\",\n  text: \"Dashboard\",\n  icon: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 41\n  }, this)\n}, {\n  path: \"/actuators\",\n  text: \"Actuateurs\",\n  icon: /*#__PURE__*/_jsxDEV(Lightbulb, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 51\n  }, this)\n}, {\n  path: \"/sensors\",\n  text: \"Sensors\",\n  icon: /*#__PURE__*/_jsxDEV(Sensors, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 46\n  }, this)\n}, {\n  path: \"/users\",\n  text: \"Utilisateurs\",\n  icon: /*#__PURE__*/_jsxDEV(Person, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 49\n  }, this)\n}];\n\nconst DrawerContainer = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const auth = useAuth();\n  const location = useLocation();\n  const [selected, setSelected] = useState(-1);\n  const theme = useTheme();\n  useEffect(() => {\n    setSelected(linkList.findIndex(value => location.pathname === value.path));\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    open: true,\n    variant: \"persistent\",\n    sx: {\n      width: drawerWidth,\n      flexShrink: 0,\n      \"& .MuiDrawer-paper\": {\n        width: drawerWidth,\n        backgroundColor: theme.palette.primary.light,\n        boxShadow: \"0 0 30px rgba(0, 0, 0, 0.2)\",\n        boxSizing: \"border-box\"\n      },\n      \"& .Mui-selected\": {\n        backgroundColor: \"rgba(255,255,255,0.2)!important\"\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      children: linkList.map((value, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        sx: {\n          color: \"white\",\n          padding: 0\n        },\n        onClick: () => {\n          navigate(value.path);\n        },\n        children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n          selected: selected === index,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            sx: {\n              color: \"white\"\n            },\n            children: value.icon || \"NA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            children: value.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, value.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      marginTop: \"auto\",\n      children: auth.token ? /*#__PURE__*/_jsxDEV(List, {\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: () => {\n            auth.signout();\n          },\n          sx: {\n            padding: 0\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              sx: {\n                color: \"white\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              sx: {\n                color: \"white\"\n              },\n              children: \"D\\xE9connexion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DrawerContainer, \"n+aXlrwPtluOtKxyvqmcYbwK3Cs=\", false, function () {\n  return [useNavigate, useAuth, useLocation, useTheme];\n});\n\n_c = DrawerContainer;\nexport default DrawerContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawerContainer\");","map":{"version":3,"sources":["C:/Users/seill/OneDrive/Documents/web_services/sumatohomu/src/components/Drawer.tsx"],"names":["useEffect","useState","useLocation","useNavigate","Drawer","List","ListItem","ListItemIcon","ListItemButton","ListItemText","Box","Sensors","Dashboard","Person","Lightbulb","Logout","useAuth","useTheme","drawerWidth","linkList","path","text","icon","DrawerContainer","navigate","auth","location","selected","setSelected","theme","findIndex","value","pathname","width","flexShrink","backgroundColor","palette","primary","light","boxShadow","boxSizing","map","index","color","padding","token","signout"],"mappings":"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","sourcesContent":["import { FunctionComponent, ReactElement, useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport {\r\n  Sensors,\r\n  Dashboard,\r\n  Person,\r\n  Lightbulb,\r\n  Logout,\r\n} from \"@mui/icons-material\";\r\nimport { useAuth } from \"./utils/AuthProvider\";\r\nimport { useTheme } from \"../themes/ThemeProvider\";\r\n\r\nconst drawerWidth = 200;\r\nconst linkList: {\r\n  path: string;\r\n  icon?: ReactElement;\r\n  text: string;\r\n}[] = [\r\n  { path: \"/\", text: \"Dashboard\", icon: <Dashboard /> },\r\n  { path: \"/actuators\", text: \"Actuateurs\", icon: <Lightbulb /> },\r\n  { path: \"/sensors\", text: \"Sensors\", icon: <Sensors /> },\r\n  { path: \"/users\", text: \"Utilisateurs\", icon: <Person /> },\r\n];\r\n\r\nconst DrawerContainer: FunctionComponent = () => {\r\n  const navigate = useNavigate();\r\n  const auth = useAuth();\r\n  const location = useLocation();\r\n  const [selected, setSelected] = useState(-1);\r\n  const theme = useTheme();\r\n\r\n  useEffect(() => {\r\n    setSelected(\r\n      linkList.findIndex((value) => location.pathname === value.path)\r\n    );\r\n  }, [location]);\r\n\r\n  return (\r\n    <Drawer\r\n      open={true}\r\n      variant={\"persistent\"}\r\n      sx={{\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        \"& .MuiDrawer-paper\": {\r\n          width: drawerWidth,\r\n          backgroundColor: theme.palette.primary.light,\r\n          boxShadow: \"0 0 30px rgba(0, 0, 0, 0.2)\",\r\n          boxSizing: \"border-box\",\r\n        },\r\n        \"& .Mui-selected\": {\r\n          backgroundColor: \"rgba(255,255,255,0.2)!important\",\r\n        },\r\n      }}\r\n    >\r\n      <List>\r\n        {linkList.map((value, index) => (\r\n          <ListItem\r\n            key={value.path}\r\n            sx={{\r\n              color: \"white\",\r\n              padding: 0,\r\n            }}\r\n            onClick={() => {\r\n              navigate(value.path);\r\n            }}\r\n          >\r\n            <ListItemButton selected={selected === index}>\r\n              <ListItemIcon\r\n                sx={{\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {value.icon || \"NA\"}\r\n              </ListItemIcon>\r\n              <ListItemText>{value.text}</ListItemText>\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      <Box marginTop={\"auto\"}>\r\n        {auth.token ? (\r\n          <List>\r\n            <ListItem\r\n              onClick={() => {\r\n                auth.signout();\r\n              }}\r\n              sx={{\r\n                padding: 0,\r\n              }}\r\n            >\r\n              <ListItemButton>\r\n                <ListItemIcon sx={{ color: \"white\" }}>\r\n                  <Logout />\r\n                </ListItemIcon>\r\n                <ListItemText sx={{ color: \"white\" }}>Déconnexion</ListItemText>\r\n              </ListItemButton>\r\n            </ListItem>\r\n          </List>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Box>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default DrawerContainer;\r\n"]},"metadata":{},"sourceType":"module"}