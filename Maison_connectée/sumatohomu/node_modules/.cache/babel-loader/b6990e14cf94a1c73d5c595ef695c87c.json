{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seill\\\\OneDrive\\\\Documents\\\\web_services\\\\sumatohomu\\\\src\\\\components\\\\dialogs\\\\AddSensor.tsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { Button, Dialog, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem, Select, Stack, TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { SensorType } from \"../../interfaces/Sensor\";\nimport { AlertContext } from \"../utils/AlertProvider\";\nimport requester from \"../../modules/requester\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddSensor = props => {\n  _s();\n\n  const [designation, setDesignation] = useState(\"\");\n  const [type, setType] = useState(SensorType.TEMPERATURE);\n  const {\n    showAlert\n  } = useContext(AlertContext);\n\n  const add = async () => {\n    try {\n      const sensor = {\n        designation,\n        type,\n        rawValue: type === SensorType.PROXIMITY ? false : 0\n      };\n      const response = await requester.post(\"sensor\", sensor); // call onClose and onAddedActuator\n\n      props.onClose();\n\n      if (props.onAddedSensor) {\n        props.onAddedSensor({ ...sensor,\n          id: response.data.data.id\n        });\n      }\n    } catch (error) {\n      showAlert(\"error\", error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: props.show,\n    onClose: props.onClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Ajouter un actuateur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"Veuillez remplir les champs ci-dessous pour ajouter votre actuateur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        marginY: 2,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            placeholder: \"ex: volet roulant\",\n            label: \"Designation\",\n            value: designation,\n            onChange: e => setDesignation(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              fullWidth: true,\n              label: \"Type\",\n              value: type,\n              onChange: e => setType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: SensorType.TEMPERATURE,\n                children: \"Temp\\xE9rature\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: SensorType.HUMIDITY,\n                children: \"Humidit\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: SensorType.BARO,\n                children: \"Barom\\xE8tre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: SensorType.PROXIMITY,\n                children: \"Proximit\\xE9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => add(),\n            disabled: !designation.length,\n            children: \"Ajouter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddSensor, \"qnIgqxbCyrYIw4sA4Jx6tcD+FN0=\");\n\n_c = AddSensor;\nexport default AddSensor;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSensor\");","map":{"version":3,"sources":["C:/Users/seill/OneDrive/Documents/web_services/sumatohomu/src/components/dialogs/AddSensor.tsx"],"names":["useContext","useState","Button","Dialog","DialogContent","DialogContentText","DialogTitle","FormControl","InputLabel","MenuItem","Select","Stack","TextField","Box","SensorType","AlertContext","requester","AddSensor","props","designation","setDesignation","type","setType","TEMPERATURE","showAlert","add","sensor","rawValue","PROXIMITY","response","post","onClose","onAddedSensor","id","data","error","show","e","target","value","HUMIDITY","BARO","length"],"mappings":";;;AAAA,SAA4BA,UAA5B,EAAwCC,QAAxC,QAAwD,OAAxD;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,aAHF,EAIEC,iBAJF,EAKEC,WALF,EAMEC,WANF,EAOEC,UAPF,EAQEC,QARF,EASEC,MATF,EAUEC,KAVF,EAWEC,SAXF,QAYO,eAZP;AAaA,SAASC,GAAT,QAAoB,aAApB;AACA,SAAiBC,UAAjB,QAAmC,yBAAnC;AACA,SAASC,YAAT,QAA6B,wBAA7B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAQA,MAAMC,SAA4C,GAChDC,KADmD,IAEhD;AAAA;;AACH,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACoB,IAAD,EAAOC,OAAP,IAAkBrB,QAAQ,CAACa,UAAU,CAACS,WAAZ,CAAhC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAgBxB,UAAU,CAACe,YAAD,CAAhC;;AAEA,QAAMU,GAAG,GAAG,YAAY;AACtB,QAAI;AACF,YAAMC,MAAM,GAAG;AACbP,QAAAA,WADa;AAEbE,QAAAA,IAFa;AAGbM,QAAAA,QAAQ,EAAEN,IAAI,KAAKP,UAAU,CAACc,SAApB,GAAgC,KAAhC,GAAwC;AAHrC,OAAf;AAKD,YAAMC,QAAQ,GAAG,MAAMb,SAAS,CAACc,IAAV,CAAe,QAAf,EAAyBJ,MAAzB,CAAvB,CANG,CAMsD;;AACxDR,MAAAA,KAAK,CAACa,OAAN;;AACA,UAAIb,KAAK,CAACc,aAAV,EAAyB;AACvBd,QAAAA,KAAK,CAACc,aAAN,CAAoB,EAAC,GAAGN,MAAJ;AAAYO,UAAAA,EAAE,EAAEJ,QAAQ,CAACK,IAAT,CAAcA,IAAd,CAAmBD;AAAnC,SAApB;AACD;AACF,KAXD,CAWE,OAAOE,KAAP,EAAc;AACdX,MAAAA,SAAS,CAAC,OAAD,EAAUW,KAAV,CAAT;AACD;AACF,GAfD;;AAiBA,sBACE,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAEjB,KAAK,CAACkB,IAApB;AAA0B,IAAA,OAAO,EAAElB,KAAK,CAACa,OAAzC;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAA,8BACE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAE,CAAd;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE,CAAhB;AAAA,kCACE,QAAC,SAAD;AACE,YAAA,SAAS,MADX;AAEE,YAAA,WAAW,EAAC,mBAFd;AAGE,YAAA,KAAK,EAAC,aAHR;AAIE,YAAA,KAAK,EAAEZ,WAJT;AAKE,YAAA,QAAQ,EAAGkB,CAAD,IAAOjB,cAAc,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AALjC;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,WAAD;AAAA,oCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AACE,cAAA,SAAS,MADX;AAEE,cAAA,KAAK,EAAC,MAFR;AAGE,cAAA,KAAK,EAAElB,IAHT;AAIE,cAAA,QAAQ,EAAGgB,CAAD,IAAOf,OAAO,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ1B;AAAA,sCAME,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAEzB,UAAU,CAACS,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,eAOE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAET,UAAU,CAAC0B,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,eAQE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAE1B,UAAU,CAAC2B,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,eASE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAE3B,UAAU,CAACc,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eAsBE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAE,MAAMH,GAAG,EAA1B;AAA8B,YAAA,QAAQ,EAAE,CAACN,WAAW,CAACuB,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CA9DD;;GAAMzB,S;;KAAAA,S;AAgEN,eAAeA,SAAf","sourcesContent":["import { FunctionComponent, useContext, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Sensor, SensorType } from \"../../interfaces/Sensor\";\r\nimport { AlertContext } from \"../utils/AlertProvider\";\r\nimport requester from \"../../modules/requester\";\r\n\r\ninterface AddSensorProps {\r\n  show: boolean;\r\n  onClose: () => void;\r\n  onAddedSensor?: (sensor: Sensor) => void;\r\n}\r\n\r\nconst AddSensor: FunctionComponent<AddSensorProps> = (\r\n  props: AddSensorProps\r\n) => {\r\n  const [designation, setDesignation] = useState(\"\");\r\n  const [type, setType] = useState(SensorType.TEMPERATURE);\r\n  const { showAlert } = useContext(AlertContext);\r\n\r\n  const add = async () => {\r\n    try {\r\n      const sensor = {\r\n        designation,\r\n        type,\r\n        rawValue: type === SensorType.PROXIMITY ? false : 0,\r\n      };\r\n     const response = await requester.post(\"sensor\", sensor); // call onClose and onAddedActuator\r\n      props.onClose();\r\n      if (props.onAddedSensor) {\r\n        props.onAddedSensor({...sensor, id: response.data.data.id});\r\n      }\r\n    } catch (error) {\r\n      showAlert(\"error\", error as string);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={props.show} onClose={props.onClose}>\r\n      <DialogTitle>Ajouter un actuateur</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Veuillez remplir les champs ci-dessous pour ajouter votre actuateur\r\n        </DialogContentText>\r\n        <Box marginY={2}>\r\n          <Stack spacing={2}>\r\n            <TextField\r\n              fullWidth\r\n              placeholder=\"ex: volet roulant\"\r\n              label=\"Designation\"\r\n              value={designation}\r\n              onChange={(e) => setDesignation(e.target.value)}\r\n            />\r\n            <FormControl>\r\n              <InputLabel>Type</InputLabel>\r\n              <Select\r\n                fullWidth\r\n                label=\"Type\"\r\n                value={type}\r\n                onChange={(e) => setType(e.target.value as SensorType)}\r\n              >\r\n                <MenuItem value={SensorType.TEMPERATURE}>Température</MenuItem>\r\n                <MenuItem value={SensorType.HUMIDITY}>Humidité</MenuItem>\r\n                <MenuItem value={SensorType.BARO}>Baromètre</MenuItem>\r\n                <MenuItem value={SensorType.PROXIMITY}>Proximité</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <Button onClick={() => add()} disabled={!designation.length}>\r\n              Ajouter\r\n            </Button>\r\n          </Stack>\r\n        </Box>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddSensor;\r\n"]},"metadata":{},"sourceType":"module"}